--------------DATE AND TO_CHAR FUNCTION----------------------------

Select to_char(sysdate, 'MM/YEAR') from dual;

SELECT FIRST_NAME, HIRE_DATE, TO_CHAR(HIRE_DATE, 'YYYY'), TO_CHAR(HIRE_DATE, 'MM'), TO_CHAR(HIRE_DATE, 'MM/YYYY') FROM EMPLOYEES;

SELECT FIRST_NAME, TO_CHAR(HIRE_DATE, 'DAY') AS "JOINING DATE" FROM EMPLOYEES;

SELECT TO_CHAR(HIRE_DATE, 'DD/DAY/MONTH/YEAR') AS "DETAILS" FROM EMPLOYEES;

--------------NESTING FUNCTION----------------------------------------------------------------

SELECT FIRST_NAME, 
UPPER(CONCAT(LENGTH(FIRST_NAME),LAST_NAME)) FROM EMPLOYEES
WHERE DEPARTMENT_ID = 20;

SELECT FIRST_NAME,
LOWER(CONCAT(FIRST_NAME, SUBSTR(LAST_NAME, 1,3))) AS "FULL NAME" FROM EMPLOYEES;


---------------NVL----------------------------------------------------------------

SELECT FIRST_NAME, NVL(COMMISSION_PCT,0) FROM EMPLOYEES;

----------------CASE EXPRESSION-------------------------
-----CASE------------
SELECT FIRST_NAME, JOB_ID, SALARY,
CASE JOB_ID WHEN 'IT_PROG' THEN 1.10*SALARY
            WHEN 'ST_CLERK' THEN 1.15*SALARY
            WHEN 'SA-REP' THEN 1.20*SALARY
ELSE SALARY END "REVISED_SALARY"
FROM EMPLOYEES;

--------DECODE--------------
SELECT FIRST_NAME, JOB_ID, SALARY,
DECODE(JOB_ID, 'IT_PROG', 1.10*SALARY,
              'ST_CLERK', 1.54*SALARY,
              'SA_REP', 1.9*SALARY,
         SALARY)
REVISED_SALARY 
FROM EMPLOYEES;

----------------AGGRIGATE FUNCTION-------------

SELECT AVG(SALARY), MAX(SALARY),
       MIN(SALARY), SUM(SALARY), COUNT(*)
FROM EMPLOYEES;

SELECT SUM(SALARY), MAX(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID=20;

SELECT MIN(HIRE_DATE), MAX(SALARY) 
FROM EMPLOYEES;

SELECT COUNT(*)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 50;

SELECT COUNT(COMMISSION_PCT)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 80;

SELECT COUNT(DISTINCT DEPARTMENT_ID)
FROM EMPLOYEES;

SELECT AVG(COMMISSION_PCT)
FROM EMPLOYEES;

SELECT AVG(NVL(COMMISSION_PCT, 0))
FROM EMPLOYEES;

-------------------GROUP BY-------------------
SELECT DEPARTMENT_ID, SUM(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

SELECT JOB_ID, SUM(SALARY), AVG(SALARY)
FROM EMPLOYEES
GROUP BY JOB_ID;

SELECT JOB_ID, DEPARTMENT_ID, SUM(SALARY), AVG(SALARY)
FROM EMPLOYEES
GROUP BY JOB_ID, DEPARTMENT_ID;

SELECT JOB_ID, COUNT(JOB_ID)
FROM EMPLOYEES
GROUP BY DISTINCT JOB_ID LIKE '%MAN';            //

SELECT JOB_ID, SUM(SALARY)
FROM EMPLOYEES
WHERE JOB_ID <> 'AD_PRES'
HAVING SUM(SALARY)>1500
GROUP BY JOB_ID;

SELECT JOB_ID, SUM(SALARY)
FROM EMPLOYEES
WHERE JOB_ID<> 'AD_PRES' AND DEPARTMENT_ID <> 20
HAVING SUM(SALARY)>1500
GROUP BY JOB_ID

----------CALCULATE NO DATE UNTILL NEXT ANNIVERSARY--------------------

SELECT JOB_ID, 365-SUBSTR(ROUND((SYSDATE-HIRE_DATE)/365,2).4.5) FROM EMPLOYEES;           //


-------FIND NO EMPLOYEES IN EACH DEPARTMENT--------------------

SELECT DEPARTMENT_ID, COUNT(DEPARTMENT_ID)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

------------ FIND THE AVG SALARY OF EMPLOYEES IN EACH DEPARTMENT AND ROUND IT UP TO 2 DECIMAL--------------------

SELECT DEPARTMENT_ID,ROUND(AVG(SALARY), 2)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

-------FIND TOTAL AND HIGHTS AND LOWEST SALARY IN JOB WISE ------------------------

SELECT JOB_ID SUM(SALARY),MAX(SALARY),MIN(SALARY)
FROM EMPLOYEES
GROUP BY JOB_ID;

------FIND THE NO EMP FOR EACH JOB ROLE---------------------

SELECT JOB_ID, COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
GROUP BY JOB_ID;

---------FIND DEPT WISE HIGHTS SALARY----------

SELECT EMPLOYEE_ID, MAX(SALARY)
FROM EMPLOYEES
GROUP BY EMPLOYEE_ID;


---------------FIND THE NO EMPLOYEES IN EACH DEPARTMET WHEREE ATLEAST 3 EMP EXIST------------------------


-----------JOINS---------------

--------NATURAL JOINS---------------

SELECT * FROM EMPLOYEES NATURAL JOIN DEPARTMENTS;

--------------INNER JOIN---------------

SELECT * FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID);

----------------INNER JOIN OR EQUE JOIN--------------------

SELECT * FROM EMPLOYEES JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

SELECT * FROM EMPLOYEES E JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT E.FIRST_NAME, D.DEPARTMENT_ID FROM EMPLOYEES E JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;


---------------DISPLAY FIRSTNAME SALARY DEPARTMENTNAME AND CITY USE NATURAL JOIN=----------------------------

SELECT FIRST_NAME, SALARY, DEPARTMENT_NAME,CITY
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID

--------------DISPLAY FIRST_NAME, DEPARTMENT_NAME, DEPARTMENT_ID, COUNTRY_ID, COUNTRY_NAME, REGION_NAME FOR All THE EMPLOYE WORKS ON DEPARTMENT=20-----------------------

SELECT E.FIRST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME, C.COUNTRY_ID, C.COUNTRY_NAME, R.REGION_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID
JOIN REGIONS R ON C.REGION_ID = R.REGION_ID
WHERE D.DEPARTMENT_ID=20;

----------------NONEQUIJOINS--------------------

SELECT E.FIRST_NAME, E.SALARY, J.JOB_ID, J.JOB_TITLE
FROM EMPLOYEES E JOIN JOBS J 
ON E.SALARY
BETWEEN J.MIN_SALARY AND J.MAX_SALARY;

-----------------SELF JOIN-------------------------

SELECT E.FIRST_NAME EMPLOYEE#, M.FIRST_NAME MANAGER# FROM EMPLOYEES E 
JOIN EMPLOYEES M ON E.MANAGER_ID=M.EMPLOYEE_ID;

--------------DISPLAY ALL EMPLOYEES WHO AFTER JOIN DAVIES--------------------

SELECT E.EMPLOYEE_ID, E.LAST_NAME FROM EMPLOYEES E
JOIN EMPLOYEES M ON E.HIRE_DATE > M.HIRE_DATE
WHERE M.LAST_NAME = 'Davies';


----------DISPLAY ALL EMPLOYEES BEFORE MANAGER------------------------

SELECT E.EMPLOYEE_ID,E.FIRST_NAME, E.LAST_NAME, E.HIRE_DATE
FROM EMPLOYEES E
JOIN EMPLOYEES M ON E.MANAGER_ID=M.EMPLOYEE_ID
WHERE E.HIRE_DATE < M.HIRE_DATE;

----------------LEFT JOIN------------------